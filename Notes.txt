// function onSubmit(data: IPlatform) {
  //   toast({
  //     title: "You submitted the following values:",
  //     description: (
  //       <pre className="mt-2 w-[340px] rounded-md bg-slate-950 p-4">
  //         <code className="text-white">{JSON.stringify(data, null, 2)}</code>
  //       </pre>
  //     ),
  //   });
  // }

  // const placeholder = {
//   _id: new mongoose.Types.ObjectId(),
//   uid: "",
//   markets: [],
// };


rules:
  "no-explicit-any": ["off"]
  NOT "@typescript-eslint/no-explicit-any": ["off"]


  // import { Separator } from "@/components/ui/separator";

  https://stackoverflow.com/questions/19287142/populate-a-mongoose-model-with-a-field-that-isnt-an-id

--- use copilot's answer

  Microsoft Copilot
  ```
  const englishArray = [
  { id: 101, name: "Elephant" },
  { id: 102, name: "Octopus" }
];

const chineseArray = [
  { id: 101, name: "DGHktyi" }
];

const newArray = englishArray.map(englishItem => {
  const chineseItem = chineseArray.find(item => item.id === englishItem.id);
  return {
    ...englishItem,
    name: chineseItem ? chineseItem.name : englishItem.name
  };
});

console.log(newArray);
```

Chat Gpt

```
const englishArray = [
  { id: 101, name: "Elephant", size: "large" },
  { id: 102, name: "Octopus", size: "large" },
];

const chineseArray = [{ id: 101, name: "DGHktyi", size: "large" }];

// Convert chineseArray to a lookup object for quick access
const chineseLookup = chineseArray.reduce((acc, item) => {
  acc[item.id] = item.name;
  return acc;
}, {});

// Map through the englishArray and use chinese name if available
const combinedArray = englishArray.map((item) => {
  return {
    ...item,
    name: chineseLookup[item.id] || item.name,
  };
});

console.log(combinedArray);
```

    columnHelper.accessor("roles", {
      cell: (info) => {
        const roles = info.getValue();

        return (
          <div>
            {roles.map((role) => (
              <div className="px-2 py-1 bg-green-500 rounded-full text-white text-center my-2 text-sm">
                {role.toUpperCase()}
              </div>
            ))}
          </div>
        );
      },
      id: "roles",
      header: "Roles",
    }),

    console.time('everything');
elements.forEach(() => {
  console.time('methodCall');
  methodCall(() => {
    console.time('build');
	build();
	console.timeEnd('build');
  });
  console.timeEnd('methodCall');
});
console.timeEnd('everything');



    
